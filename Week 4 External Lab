// Week 4 External Lab

use std::env;
use std::fs::File;
use std::io::{self, BufRead, BufReader, ErrorKind};

fn main() {
    // Get the command-line arguments
    let args: Vec<String> = env::args().collect();

    // Check if the correct number of arguments is provided
    if args.len() != 2 {
        eprintln!("Usage: {} <file_name>", args[0]);
        std::process::exit(1);
    }

    let file_name = &args[1];
    if let Err(e) = read_file(file_name) {
        eprintln!("Error: {}", e);
        std::process::exit(1);
    }
}

fn read_file(file_name: &str) -> Result<(), io::Error> {
    let file = File::open(file_name);
    match file {
        Ok(file) => {
            let reader = BufReader::new(file);
            for line in reader.lines() {
                match line {
                    Ok(line) => println!("{}", line),
                    Err(error) => eprintln!("Error reading line: {}", error),
                }
            }
        },
        Err(error) => match error.kind() {
            ErrorKind::NotFound => eprintln!("File not found: {}", error),
            ErrorKind::PermissionDenied => eprintln!("Permission denied: {}", error),
            _ => eprintln!("Error opening file: {}", error),
        },
    }
    Ok(())
}

